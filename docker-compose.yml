services:
  mde-nginx:
    container_name: mde-nginx
    image: nginx:1.27.2-alpine
    volumes:
      - ./mde-nginx/dev/default.conf:/etc/nginx/conf.d/default.conf
      - ./mde-nginx/ssl/private/localhost.crt:/etc/nginx/ssl/private/localhost.crt
      - ./mde-nginx/ssl/private/localhost.key:/etc/nginx/ssl/private/localhost.key
    ports:
      - 80:80
      - 443:443
    healthcheck:
      test: ['CMD', 'curl', '-k', '-f', 'https://localhost']
      interval: 5m
      timeout: 3s
      start_period: 30s
    depends_on:
      - mde-gnos
      - mde-backend
      - mde-client
      - mde-keycloak
  mde-postgres:
    container_name: mde-postgres
    image: postgres:17
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./mde-postgres/postgresql_data:/var/lib/postgresql/data:rw #,U
      - ./mde-postgres/init_data:/docker-entrypoint-initdb.d
  mde-keycloak:
    container_name: mde-keycloak
    image: quay.io/keycloak/keycloak:26.0
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_ADMIN}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: mde-postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: ${KEYCLOAK_HOST}
      KC_HOSTNAME_PATH: /auth
      KC_HTTP_RELATIVE_PATH: /auth
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command: ["start", "--proxy-headers", "xforwarded", "--http-enabled", "true"]
  mde-gnos:
    container_name: mde-gnos
    image: geonetwork:4.4.6
    depends_on:
      - mde-postgres
      - mde-elasticsearch
    ports:
      - 8888:8080
    environment:
      GN_CONFIG_PROPERTIES: >-
        -Des.host=mde-elasticsearch
        -Des.protocol=http
        -Des.port=9200
        -Des.url=http://mde-elasticsearch:9200
        -Dkb.url=http://mde-kibana:5601
        -Dgeonetwork.dir=/var/lib/geonetwork-data
    volumes:
      - ./gn-public-data:/var/lib/geonetwork-data:rw #,U
      - ./logs/:/var/lib/jetty/logs/:rw #,U
  mde-elasticsearch:
    image: docker.terrestris.de/elasticsearch:8.14.3
    container_name: mde-elasticsearch
    ulimits:
      memlock:
        soft: 512000
        hard: 512000
      nofile:
        soft: 65536
        hard: 65536
    group_add:
      - 0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    volumes:
      - ./esdata-public:/usr/share/elasticsearch/data:rw #,U
  mde-kibana:
    image: docker.terrestris.de/kibana:8.14.3
    container_name: mde-kibana
    environment:
      SERVER_NAME: 'mde-kibana'
      ELASTICSEARCH_HOSTS: '["http://mde-elasticsearch:9200"]'
      SERVER_BASEPATH: '/geonetwork/dashboards'
      SERVER_REWRITEBASEPATH: 'false'
      KIBANA_INDEX: .dashboards
      XPACK_MONITORING_UI_CONTAINER_ELASTICSEARCH_ENABLED: 'true'
  mde-backend:
    build:
      context: ${BACKEND_LOCATION}
      dockerfile: Dockerfile.dev
    container_name: mde-backend
    volumes:
      - $HOME/.m2:/root/.m2
      - ${BACKEND_LOCATION}/mde-services/:/app/
      - ./mde-backend/keystore/cacerts:/opt/java/openjdk/lib/security/cacerts
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
    ports:
      - 4711:4711
  mde-client:
    image: oven/bun:1.1.36-alpine
    container_name: mde-client
    volumes:
      - ${CLIENT_LOCATION}:/app
    working_dir: /app
    init: true
    ports:
      - 5173:5173
    entrypoint: "bun --bun run dev"
    environment:
      - NODE_ENV=development
