services:
  mde-nginx:
    container_name: mde-nginx
    hostname: mde-nginx
    image: nginx
    privileged: true
    restart: unless-stopped
    volumes:
      - ./mde-nginx/test/default.conf:/etc/nginx/conf.d/default.conf:rw,U
      - ./mde-nginx/test/gdi-con-t-server.selfsign.crt:/etc/nginx/ssl/private/gdi-con-t-server.selfsign.crt:U
      - ./mde-nginx/test/gdi-con-t-server.key:/etc/nginx/ssl/private/gdi-con-t-server.key:U
    ports:
      - 80:80
      - 443:443
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "https://localhost"]
      interval: 5m
      timeout: 3s
      start_period: 30s
    depends_on:
      - mde-gnos
      - mde-backend
      - mde-client
      - mde-keycloak
  mde-postgres:
    container_name: mde-postgres
    hostname: mde-postgres
    image: postgres:17
    privileged: true
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./mde-postgres/postgresql_data:/var/lib/postgresql/data:rw,U
      - ./mde-postgres/init_data:/docker-entrypoint-initdb.d
  mde-keycloak:
    container_name: mde-keycloak
    hostname: mde-keycloak
    image: quay.io/keycloak/keycloak:26.0
    restart: unless-stopped
    depends_on:
      - mde-postgres
    environment:
      KEYCLOAK_USER: ${KEYCLOAK_ADMIN}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_DB: postgres
      KC_DB_URL_HOST: mde-postgres
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak
      KC_DB_USERNAME: ${POSTGRES_USER}
      KC_DB_PASSWORD: ${POSTGRES_PASSWORD}
      KC_HOSTNAME: ${KEYCLOAK_HOST}
      KC_HOSTNAME_PATH: /auth
      KC_HTTP_RELATIVE_PATH: /auth
      KC_BOOTSTRAP_ADMIN_USERNAME: ${KEYCLOAK_ADMIN}
      KC_BOOTSTRAP_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    command:
      ["start", "--proxy-headers", "xforwarded", "--http-enabled", "true"]
    # volumes:
    #   - ./mde-keycloak/cacerts:/etc/pki/ca-trust/extracted/java/cacerts:rw,U
  mde-gnos:
    container_name: mde-gnos
    hostname: mde-gnos
    image: geonetwork:4.4.7
    restart: unless-stopped
    depends_on:
      - mde-postgres
      - mde-elasticsearch
    environment:
      GN_CONFIG_PROPERTIES: >-
        -Des.host=mde-elasticsearch
        -Des.protocol=http
        -Des.port=9200
        -Des.url=http://mde-elasticsearch:9200
        -Dgeonetwork.dir=/var/lib/geonetwork_data
        -Dgeonetwork.db.type=postgres
      GEONETWORK_DB_USERNAME: ${POSTGRES_USER}
      GEONETWORK_DB_PASSWORD: ${POSTGRES_PASSWORD}
      GEONETWORK_DB_NAME: gnos
      GEONETWORK_DB_HOST: mde-postgres
      GEONETWORK_DB_PORT: 5432
    volumes:
      - ./gn-public-data:/var/lib/geonetwork-data:rw,U
      - ./logs/:/var/lib/jetty/logs/:rw,U
  mde-elasticsearch:
    image: elasticsearch:8.18.0
    container_name: mde-elasticsearch
    hostname: mde-elasticsearch
    restart: unless-stopped
    ulimits:
      memlock:
        soft: 512000
        hard: 512000
      nofile:
        soft: 65536
        hard: 65536
    group_add:
      - 0
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    volumes:
      - ./esdata-public:/usr/share/elasticsearch/data:rw,U
  mde-backend:
    image: ghcr.io/gdi-be/mde-backend:3.6.1
    container_name: mde-backend
    hostname: mde-backend
    restart: unless-stopped
    depends_on:
      - mde-postgres
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_HOST: ${KEYCLOAK_HOST}
      KEYCLOAK_REALM: ${KEYCLOAK_REALM}
      KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
      KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
      VARIABLE_FILE: ${VARIABLE_FILE}
      CSW_SERVER: ${CSW_SERVER}
      CSW_USER: ${CSW_USER}
      CSW_PASSWORD: ${CSW_PASSWORD}
      CODELISTS_DIR: ${CODELISTS_DIR}
      JAVA_TOOL_OPTIONS: "-Dlog4j2.configurationFile=/config/log4j2.properties"
    volumes:
      - ./mde-backend/lucene:/lucene
      - ./mde-backend/keystore/cacerts:/opt/java/openjdk/lib/security/cacerts:U
      - ./mde-backend/variables.json:/variables.json:U
      - ./mde-backend/log4j2.properties:/config/log4j2.properties
      - ./codelists:/data/codelists:U
    privileged: true
  mde-client:
    image: ghcr.io/gdi-be/mde-client:3.16.0
    container_name: mde-client
    hostname: mde-client
    restart: unless-stopped
    volumes:
      - .client-env:/app/.env:U
      - ./codelists:/data/codelists:U
      - ./mde-backend/variables.json/:/data/variables.json:U
    privileged: true
